/*Variables*/
$colorTexto: #eee;
$colorTextoHover: #fff;
$colorBg:  #666;
$colorListaHover: #888;
$colorHeader:#444;
$bgHeader:#eee;

/*Para establecer el color del texto y el color del fondo*/
@mixin colorTextoFondo() {
  color: $colorTexto;
  background: $colorBg;
}

/*Mixin de texto header*/
@mixin colorTextoHeader() {
    color: $colorHeader;
    background: $bgHeader;
}

/*Para establecer el color del texto y el color del fondo, pero en este 
caso para cuando pasamos con el ratón sobre él*/

@mixin colorTextoFondoHover() {
  color: $colorTextoHover;
  background-color: $colorBg;
}

/*Para el box-sizing independientemente del tipo de navegador, el valor que
tomará el box-sizing será un parámetro que le pasaremos cuando lo invoquemos.*/

@mixin box-sizing($box) {
  -webkit-box-sizing: $box;
  -moz-box-sizing: $box;
  box-sizing: $box;
}

/*Para las transiciones independientemente del navegador, a este mixin le
enviaremos los argumentos de: property, duration y timing. Este último tendrá el
valor por defecto linear*/

@mixin transicion($property, $duration, $timing: linear) {
  -webkit-transition: $property, $duration, $timing;
  -moz-transition: $property, $duration, $timing;
  transition: $property, $duration, $timing;
}

/*Para las animaciones (transiciones) donde también estarán determinadas por el
navegador, los argumentos que usaremos en este mixing son: name, duration y
timing. Este último tendrá el valor por defecto linear.*/

@mixin animacion($name, $duration, $timing: linear) {
  -webkit-transition: $name, $duration, $timing;
  -moz-transition: $name, $duration, $timing;
  transition: $name, $duration, $timing;
}

/*Para el footer, deberemos invocar al mixin que hemos creado para los colores
de texto y del fondo, y el mixin para el box-sizing además de usar el resto de
propiedades que vienen definidas en el archivo screen.css*/


@keyframes iluminar {
    from {
      color: #eee;
      background-color: #666;
    }
    to {
      color: #fff;
      background-color: #888;
    }
  }

header {
    @include colorTextoHeader();
    padding: 12px 30px;
    font-size: 1.8em;
    font-weight: bold;
    text-shadow: 1px 1px 2px #aaa;
    font-family: Georgia, "Times New Roman", Times, serif;
}

body{
    padding: 0;
    margin: 0;
}


/*nav: (ul) (>ul) (a) (a:hover)*/

nav{
    position: absolute;
    width: 100%;
    font-family: Arial, Helvetica, sans-serif;
    
    ul{
        list-style-type: none;
        padding: 0px;
        margin: 0px;
        
    }
    > ul{
        width: 100%;
        height: 32px;
        @include colorTextoFondo();
        display: flex;
        justify-content: space-between

    }
    a{
        @include colorTextoFondo();
        text-decoration: none;
        width: 160px;
        padding: 7px 20px;
        display: block;
        text-align: center;
        cursor: pointer;
        &:hover{
            @include colorTextoFondoHover();
            @include animacion(iluminar,0.4s ,linear);
        }
    }
}


/*ul: (.submenu)*/

ul.submenu{
    position: absolute;
    height: 0px;
    overflow: hidden;
    @include transicion(height,0.5s ,ease-out );
   
}

/*li: (.categoria) (>a) (.categoria:hover) (ul.submenu)*/

li.categoria{
    float: left;
    &:hover{
        ul.submenu{
            height: 100px;
        }
        > a{
            padding: 10px 20px;
        }
    }
    > a{
        @include transicion(padding,0.4s,ease-out )
    }
}


footer {
    @include colorTextoFondo();
    @include box-sizing(border-box);
    position: absolute;
    width: 100%;
    bottom: 0px;
    padding: 5px;
}